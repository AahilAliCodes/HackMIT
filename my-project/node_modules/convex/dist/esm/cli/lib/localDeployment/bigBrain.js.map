{
  "version": 3,
  "sources": ["../../../../../src/cli/lib/localDeployment/bigBrain.ts"],
  "sourcesContent": ["import { Context, logVerbose } from \"../../../bundler/context.js\";\nimport {\n  bigBrainAPI,\n  bigBrainFetch,\n  logAndHandleFetchError,\n} from \"../utils/utils.js\";\n\nexport async function bigBrainStart(\n  ctx: Context,\n  data: {\n    // cloud port\n    port: number;\n    projectSlug: string;\n    teamSlug: string;\n    instanceName: string | null;\n  },\n): Promise<{ deploymentName: string; adminKey: string }> {\n  return bigBrainAPI({\n    ctx,\n    method: \"POST\",\n    url: \"/api/local_deployment/start\",\n    data,\n  });\n}\n\nexport async function bigBrainPause(\n  ctx: Context,\n  data: {\n    projectSlug: string;\n    teamSlug: string;\n  },\n): Promise<void> {\n  const fetch = await bigBrainFetch(ctx);\n  try {\n    const resp = await fetch(\"/api/local_deployment/pause\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    if (!resp.ok) {\n      logVerbose(ctx, \"Failed to pause local deployment\");\n    }\n  } catch (e) {\n    return logAndHandleFetchError(ctx, e);\n  }\n}\n\nexport async function bigBrainRecordActivity(\n  ctx: Context,\n  data: {\n    instanceName: string;\n  },\n) {\n  return bigBrainAPI({\n    ctx,\n    method: \"POST\",\n    url: \"/api/local_deployment/record_activity\",\n    data,\n  });\n}\n"],
  "mappings": ";AAAA,SAAkB,kBAAkB;AACpC;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,sBAAsB,cACpB,KACA,MAOuD;AACvD,SAAO,YAAY;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EACF,CAAC;AACH;AAEA,sBAAsB,cACpB,KACA,MAIe;AACf,QAAM,QAAQ,MAAM,cAAc,GAAG;AACrC,MAAI;AACF,UAAM,OAAO,MAAM,MAAM,+BAA+B;AAAA,MACtD,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC3B,CAAC;AACD,QAAI,CAAC,KAAK,IAAI;AACZ,iBAAW,KAAK,kCAAkC;AAAA,IACpD;AAAA,EACF,SAAS,GAAG;AACV,WAAO,uBAAuB,KAAK,CAAC;AAAA,EACtC;AACF;AAEA,sBAAsB,uBACpB,KACA,MAGA;AACA,SAAO,YAAY;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,IACR,KAAK;AAAA,IACL;AAAA,EACF,CAAC;AACH;",
  "names": []
}
