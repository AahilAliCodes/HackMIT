"use strict";
import path from "path";
import { rootDirectory } from "../utils/utils.js";
export function rootDeploymentStateDir() {
  return path.join(rootDirectory(), "convex-backend-state");
}
export function deploymentStateDir(deploymentName) {
  return path.join(rootDeploymentStateDir(), deploymentName);
}
export function loadDeploymentConfig(ctx, deploymentName) {
  const configFile = path.join(
    deploymentStateDir(deploymentName),
    "config.json"
  );
  if (ctx.fs.exists(configFile)) {
    return JSON.parse(ctx.fs.readUtf8File(configFile));
  }
  return null;
}
export function saveDeploymentConfig(ctx, deploymentName, config) {
  const configFile = path.join(
    deploymentStateDir(deploymentName),
    "config.json"
  );
  if (!ctx.fs.exists(deploymentStateDir(deploymentName))) {
    ctx.fs.mkdir(deploymentStateDir(deploymentName), { recursive: true });
  }
  ctx.fs.writeUtf8File(configFile, JSON.stringify(config));
}
export function binariesDir() {
  return path.join(rootDirectory(), "binaries");
}
export function binaryZip() {
  return path.join(binariesDir(), "convex-backend.zip");
}
export function versionedBinaryDir(version) {
  return path.join(binariesDir(), version);
}
export function executablePath(version) {
  return path.join(versionedBinaryDir(version), "convex-local-backend");
}
//# sourceMappingURL=filePaths.js.map
